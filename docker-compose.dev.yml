services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gpt-pricing-postgres-dev
    environment:
      POSTGRES_DB: gpt_pricing
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gpt-pricing-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: gpt-pricing-redis-dev
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - gpt-pricing-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Development Server
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: dev
    container_name: gpt-pricing-app-dev
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/gpt_pricing
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - gpt-pricing-network
    restart: unless-stopped

networks:
  gpt-pricing-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
